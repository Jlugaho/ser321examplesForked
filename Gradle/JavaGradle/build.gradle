// Apply plugin to use Java application
apply plugin: 'application'

// Define main class
mainClassName = 'Multiply'

// Task that runs Multiply with default parameters, 
// can be overwritten with: gradle runApp --args '3 4'
task runApp(type: JavaExec) {
  group 'Multiply tasks'
  description 'Task that runs Multiply with default parameters'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Multiply'

  // Default arguments if none are provided
  args '1', '2'
}

// Task that runs Multiply but accepts new parameters
task runAppAgain(type: JavaExec) {
  group 'Multiply tasks'
  description 'Task that runs Multiply with default parameters or given values'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Multiply'

  // Only works if two arguments are provided
  if (project.hasProperty("num1") && project.hasProperty("num2")) {
    args(project.getProperty('num1'), project.getProperty('num2'))
  } else if (project.hasProperty("num1")) {
    args(project.getProperty('num1'), 1)
  } else {
    args '1', '2'  // Default values
  }
}

// Task that runs Fraction with no arguments: gradle runFraction
task runFraction(type: JavaExec) {
  group 'Fraction Tasks'
  description 'Task that runs Fraction with no arguments'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Fraction'
}

// Modify Fraction.main to accept 2 arguments: gradle runFrac -Pdenom=4 -Pnum=3
task runFrac(type: JavaExec) {
  group 'Fraction Tasks'
  description 'Task that runs Fraction with 2 arguments (num & denom)'

  classpath = sourceSets.main.runtimeClasspath

  main = 'Fraction'

  // Check for num and denom properties and pass them as arguments
  if (project.hasProperty("num") && project.hasProperty("denom")) {
    args(project.getProperty('num'), project.getProperty('denom'))
  } else if (project.hasProperty("num")) {
    args(project.getProperty('num'), 1)  // Default denominator
  } else if (project.hasProperty("denom")) {
    args(1, project.getProperty('denom'))  // Default numerator
  } else {
    args(1, 1)  // Default numerator and denominator
  }
}

// Example: Add Maven Central for dependencies
repositories {
  mavenCentral()
}

// Adding dependencies, e.g., JSON library
dependencies {
  implementation 'org.json:json:20171018'
}

